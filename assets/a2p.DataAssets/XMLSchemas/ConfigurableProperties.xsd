<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2006 sp2 U (http://www.altova.com) by www.serials.ws (www.serials.ws) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="ConfigurableProperties">
		<xs:annotation>
			<xs:documentation>This will represent a configurable subset of properties taken from some data source as a database. The properties may belong to any object: document, model, etc.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="PropertyCollectionType">
					<xs:attribute name="name"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="PropertyType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:annotation>
				<xs:documentation>Properties/Categories that belong to a parent Property</xs:documentation>
			</xs:annotation>
			<xs:element name="Designer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Designer or control name that will allow this property edition. And Parameters to be passed to the designer for this Property</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence minOccurs="0" maxOccurs="unbounded">
						<xs:element name="Parameter">
							<xs:annotation>
								<xs:documentation>Parameter as kay/value pair</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="name">
									<xs:annotation>
										<xs:documentation>Optional name for the parameter</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="value" use="required">
									<xs:annotation>
										<xs:documentation>Required value for this parameter</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="class" use="required">
						<xs:annotation>
							<xs:documentation>Name of the class that implements the designer</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="assembly">
						<xs:annotation>
							<xs:documentation>File in which the class resides</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Value" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value of the property. Could be a single string or a complex object.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="name">
						<xs:annotation>
							<xs:documentation>Name of the value</xs:documentation>
						</xs:annotation>
					</xs:attribute>
					<xs:attribute name="description"/>
					<xs:attribute name="sortNumber">
						<xs:annotation>
							<xs:documentation>Indicates sort position in case of multiple values</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="name" use="required">
			<xs:annotation>
				<xs:documentation>Name of the property.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type">
			<xs:annotation>
				<xs:documentation>Type of Property: Color, Option, Glass, etc.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sortNumber">
			<xs:annotation>
				<xs:documentation>Position in the collection that should take this property when rendered</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="description"/>
	</xs:complexType>
	<xs:complexType name="PropertyCollectionType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:annotation>
				<xs:documentation>Properties/Categories that belong to a parent Property</xs:documentation>
			</xs:annotation>
			<xs:element name="Category" type="CategoryType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name used to categorise properties: Roller Shutter, Colors (includes colors and options), etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Property" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="PropertyType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="CategoryType">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:annotation>
				<xs:documentation>Properties/Categories that belong to a parent Property</xs:documentation>
			</xs:annotation>
			<xs:element name="Category" type="CategoryType" minOccurs="0"/>
			<xs:element name="Property" minOccurs="0">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="PropertyType"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="name">
			<xs:annotation>
				<xs:documentation>Name of Category</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="sortNumber">
			<xs:annotation>
				<xs:documentation>Position in the collection that should take this property when rendered</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
</xs:schema>

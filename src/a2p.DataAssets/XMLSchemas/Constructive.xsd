<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:const="ModelConstructive" targetNamespace="ModelConstructive" elementFormDefault="qualified">
  <xsd:simpleType name="typeOptionValueDisplayProperties">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Text">
        <xsd:annotation>
          <xsd:documentation>El valor se visualizarÃ¡ mediante su texto.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Value">
        <xsd:annotation>
          <xsd:documentation>El propio valor se usarÃ¡ para visualizarse.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Both">
        <xsd:annotation>
          <xsd:documentation>Se visualizarÃ¡ el propio valor y su texto.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeGlassComponentTypes">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Spacer">
        <xsd:annotation>
          <xsd:documentation>Se muestran spacers.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Glass">
        <xsd:annotation>
          <xsd:documentation>Se muestran glasses.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Both">
        <xsd:annotation>
          <xsd:documentation>Se muestran spacers y glasses.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="typeOptionConditionValue">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define uno de los posibles valores vÃ¡lidos para la activaciÃ³n de una OptionCondition.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="value" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeOptionCondition">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define un par OpciÃ³n-Valor que servirÃ¡ como condiciÃ³n para el nodo actual.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="OptionValue" type="const:typeOptionConditionValue" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="option" type="xsd:string" use="required"/>
    <xsd:attribute name="optionValue" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="typeXPathCondition">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define una consulta XPath que servirÃ¡ como condiciÃ³n para el nodo actual.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="xPathToEvaluate" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeConditions">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define una serie de condiciones que deberÃ¡n cumplirse para que el nodo se procese. Pueden combinarse condiciones de tipo OpciÃ³n y de tipo XPath.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="OptionCondition" type="const:typeOptionCondition" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="XPathCondition" type="const:typeXPathCondition" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeTranslations">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define las posibles traducciones para varios idiomas por propiedad.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="Translation" type="const:typeTranslation" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeFilters">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define los posibles filtros del las choices.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="Filter" type="const:typeFilter" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeSystems">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define los sistemas para definir los packages.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="System" type="const:typeSystem" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typePackages">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define los packages para asignar un vidrio para un sistema</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="Package" type="const:typePackage" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeTranslation">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define una traducciÃ³n para una propiedad concreta y un idioma determinado.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="languageId" type="xsd:string" use="required"/>
    <xsd:attribute name="attribute" type="xsd:string" use="required"/>
    <xsd:attribute name="translation" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeFilter">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define un filtro para las choices.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="1" maxOccurs="unbounded">
      <xsd:element name="FilterValue" type="const:typeFilterValue" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="choice" type="xsd:string" use="required"/>
    <xsd:attribute name="type" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeFilterValue">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define el valor de un filtro para las choices.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="1">
      <xsd:element name="Translations" type="const:typeTranslations"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="value" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeSystem">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define los packages para un sistema determinado.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="Packages" type="const:typePackages" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typePackage">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define las referencias finales de los vidrios para cada package.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="reference" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:element name="xml" type="const:typeDocument">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Este documento declara las posibles secuencias de pasos necesarias para la de definiciÃ³n de un modelo de PrefSuite.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="typeDocument">
    <xsd:all>
      <xsd:element name="stepDefinitions" type="const:typeStepDefinitions">
        <xsd:annotation>
          <xsd:documentation xml:lang="es">Contiene la definiciÃ³n de todos los posibles pasos utilizados en la ediciÃ³n de los modelos. Esta definiciÃ³n es independiente del camino en el que son utilizados.</xsd:documentation>
        </xsd:annotation>
        <xsd:keyref name="keyrefStepDefinition_Step" refer="const:uniqueStepDefinitionId">
          <xsd:annotation>
            <xsd:documentation>Esta restricciÃ³n asegura que el atributo 'definition' de un elemento 'step' se corresponde con un el identificador de un elemento 'stepDefinition' </xsd:documentation>
          </xsd:annotation>
          <xsd:selector xpath="./const:step"/>
          <xsd:field xpath="@definition"/>
        </xsd:keyref>
        <xsd:unique name="uniqueStepDefinitionId">
          <xsd:annotation>
            <xsd:documentation xml:lang="es">El atributo 'id' de un stepDefinition ha de ser unico.</xsd:documentation>
          </xsd:annotation>
          <xsd:selector xpath="const:stepDefinition"/>
          <xsd:field xpath="@id"/>
        </xsd:unique>
      </xsd:element>
      <xsd:element name="paths" type="const:typePaths">
        <xsd:annotation>
          <xsd:documentation xml:lang="es">Contiene todos los posibles caminos de definiciÃ³n de un modelo. Dependiendo de unos determinados criterios de selecciÃ³n la definiciÃ³n de un modelo se harÃ¡ mediante uno de los caminos aquÃ­ definidos.</xsd:documentation>
        </xsd:annotation>
        <xsd:unique name="uniquePathId">
          <xsd:annotation>
            <xsd:documentation xml:lang="es">El atributo 'id' de un stepDefinition ha de ser unico.</xsd:documentation>
          </xsd:annotation>
          <xsd:selector xpath="const:path"/>
          <xsd:field xpath="@id"/>
        </xsd:unique>
      </xsd:element>
      <xsd:element name="elementOptions" type="const:typeElementOptions" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="es">Contiene todas las opciones por elemento para los modelos separadas por sistema.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="insertsConstructive" type="const:typePaths" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="es">Definicion de los pasos de edicion para los modelos insertados.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:all>
  </xsd:complexType>
  <xsd:complexType name="typePaths">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="path" type="const:typePath">
        <xsd:annotation>
          <xsd:documentation xml:lang="es">Define todos los pasos de un camino y las transiciones entre estos.</xsd:documentation>
        </xsd:annotation>
        <xsd:unique name="uniquePathStepDefinition">
          <xsd:selector xpath="const:step"/>
          <xsd:field xpath="@definition"/>
        </xsd:unique>
        <xsd:keyref name="keyrefPath_Next" refer="const:uniquePathStepDefinition">
          <xsd:selector xpath=".//const:next"/>
          <xsd:field xpath="@step"/>
        </xsd:keyref>
        <xsd:keyref name="keyrefPath_Navigate" refer="const:uniquePathStepDefinition">
          <xsd:selector xpath=".//const:navigate"/>
          <xsd:field xpath="@step"/>
        </xsd:keyref>
        <xsd:keyref name="keyRefPathInitialStep_Step" refer="const:uniquePathStepDefinition">
          <xsd:selector xpath="."/>
          <xsd:field xpath="@initialStep"/>
        </xsd:keyref>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typePath">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="step" type="const:typeStep">
        <xsd:annotation>
          <xsd:documentation xml:lang="es">Define un paso del camino, su contenido y las posibles transicones a otros pasos del camino.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
    <xsd:attribute name="id" type="xsd:string" use="required"/>
    <xsd:attribute name="initialStep" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation xml:lang="es">Indica cÃºal es el primer paso del camino.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="system" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation xml:lang="es">Se utiliza para filtrar el camino a utilizar dependiendo de cada modelo.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
	<xsd:attribute name="useKbOptionSystem" type="xsd:boolean" use="optional" default="false">
		<xsd:annotation>
			<xsd:documentation xml:lang="es">Se utiliza para filtrar el camino a utilizar dependiendo de cada modelo.</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeStep">
    <xsd:sequence>
      <xsd:choice maxOccurs="2">
        <xsd:element name="next" type="const:typeNext" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Indica el paso siguiente al actual.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="finish" type="const:typeFinish" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Indica que en este paso se puede finalizar la ediciÃ³n del modelo.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="navigate" type="const:typeNavigate" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Permite transitar a otros pasos del camino sin seguir la secuencia por defecto.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="definition" type="xsd:string" use="required">
      <xsd:annotation>
        <xsd:documentation xml:lang="es">Hace referencia a la definiciÃ³n de un paso (const:stepDefinition). Esta referencia es la que determina el contenido del paso.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeNext">
    <xsd:attribute name="step" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeFinish"/>
  <xsd:complexType name="typeNavigate">
    <xsd:attribute name="step" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeStepDefinitions">
    <xsd:sequence maxOccurs="unbounded">
      <xsd:element name="stepDefinition" type="const:typeStepDefinition">
        <xsd:annotation>
          <xsd:documentation xml:lang="es">Define cada uno de los pasos de ediciÃ³n del modelo. Cada paso estÃ¡ compuesto por una o mÃ¡s acciones de ediciÃ³n, como puede ser la modificacion de sus dimensiones o de sus opciones. Un paso puede ser utilizado en caminos diferentes.</xsd:documentation>
        </xsd:annotation>
        <xsd:unique name="uniqueField">
          <xsd:annotation>
            <xsd:documentation xml:lang="es">El atributo 'id' de un field ha de ser unico dentro de un step definition.</xsd:documentation>
          </xsd:annotation>
          <xsd:selector xpath=".//const:field"/>
          <xsd:field xpath="@id"/>
        </xsd:unique>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="typeStepDefinition">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:choice minOccurs="0">
        <xsd:element name="Conditions" type="const:typeConditions"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="Translations" type="const:typeTranslations"/>
      </xsd:choice>
      <xsd:choice maxOccurs="unbounded">
        <xsd:element name="group" type="const:typeGroup" minOccurs="0" maxOccurs="unbounded">
          <xsd:annotation>
            <xsd:documentation>Agrupa visualmente las diversas acciones de ediciÃ³n que se incluyan dentro del grupo de manera similar a un paso.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="dimensions" type="const:typeDimensions" minOccurs="0"/>
        <xsd:element name="color" type="const:typeColor" minOccurs="0"/>
        <xsd:element name="glasses" type="const:typeGlasses" minOccurs="0"/>
        <xsd:element name="openings" type="const:typeOpenings" minOccurs="0"/>
        <xsd:element name="options" type="const:typeOptions" minOccurs="0"/>
        <xsd:element name="field" type="const:typeField" minOccurs="0" maxOccurs="unbounded"/>
        <xsd:element name="element" type="const:typeElement" minOccurs="0"/>
        <xsd:element name="fastoffering" type="const:typeFastOffering" minOccurs="0"/>
        <xsd:element name="rollershutter" type="const:typeRollerShutter" minOccurs="0"/>
        <xsd:element name="mirror" type="const:typeMirror" minOccurs="0"/>
        <xsd:element name="changeSystem" type="const:typeChangeSystem" minOccurs="0"/>
        <xsd:element name="allReinforced" type="const:typeAllReinforced" minOccurs="0"/>
        <xsd:element name="georgianBar" type="const:typeGeorgianBar" minOccurs="0"/>
        <xsd:element name="slabs" type="const:typeEditionItemSlabs" minOccurs="0" maxOccurs="1"/>
        <xsd:element name="choices" type="const:typeChoices" minOccurs="0"/>
        <xsd:element name="georgianBarStick" type="const:typeGeorgianBarStick" minOccurs="0" maxOccurs="1"/>
        <xsd:element name="glassConfigurator" type="const:typeGlassConfigurator" minOccurs="0"/>
        <xsd:element name="curves" type="const:typeCurves" minOccurs="0"/>
        <xsd:element name="designs" type="const:typeDesigns" minOccurs="0"/>
		<xsd:element name="materialMount" type="const:typeMaterialMount" minOccurs="0"/>
	  </xsd:choice>
    </xsd:choice>
    <xsd:attribute name="id" type="xsd:ID" use="required"/>
    <xsd:attribute name="description" type="xsd:string" use="optional"/>
    <xsd:attribute name="name" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeElementOptions">
    <xsd:choice minOccurs="1" maxOccurs="unbounded">
      <xsd:element name="options" type="const:typeExtendedOptions"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeExtendedOptions">
    <xsd:complexContent>
      <xsd:extension base="const:typeOptions">
        <xsd:attribute name="System" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="typeGroup">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:choice minOccurs="0">
        <xsd:element name="Conditions" type="const:typeConditions"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="Translations" type="const:typeTranslations"/>
      </xsd:choice>
      <xsd:choice maxOccurs="unbounded">
        <xsd:element name="dimensions" type="const:typeDimensions" minOccurs="0"/>
        <xsd:element name="color" type="const:typeColor" minOccurs="0"/>
        <xsd:element name="glasses" type="const:typeGlasses" minOccurs="0"/>
        <xsd:element name="openings" type="const:typeOpenings" minOccurs="0"/>
        <xsd:element name="options" type="const:typeOptions" minOccurs="0"/>
        <xsd:element name="field" type="const:typeField" minOccurs="0"/>
        <xsd:element name="fastoffering" type="const:typeFastOffering" minOccurs="0"/>
        <xsd:element name="element" type="const:typeElement" minOccurs="0"/>
        <xsd:element name="rollershutter" type="const:typeRollerShutter" minOccurs="0"/>
        <xsd:element name="mirror" type="const:typeMirror" minOccurs="0"/>
        <xsd:element name="changeSystem" type="const:typeChangeSystem" minOccurs="0"/>
        <xsd:element name="allReinforced" type="const:typeAllReinforced" minOccurs="0"/>
        <xsd:element name="georgianBar" type="const:typeGeorgianBar" minOccurs="0"/>
        <xsd:element name="choices" type="const:typeChoices" minOccurs="0"/>
        <xsd:element name="georgianBarStick" type="const:typeGeorgianBarStick" minOccurs="0" maxOccurs="1"/>
        <xsd:element name="glassConfigurator" type="const:typeGlassConfigurator" minOccurs="0"/>
        <xsd:element name="curves" type="const:typeCurves" minOccurs="0"/>
        <xsd:element name="designs" type="const:typeDesigns" minOccurs="0"/>
		<xsd:element name="materialMount" type="const:typeMaterialMount" minOccurs="0"/>
	  </xsd:choice>
    </xsd:choice>
    <xsd:attribute name="name" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="description" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="typeElement">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="options" type="const:typeOptions" minOccurs="0"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeCurves">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:choice minOccurs="0">
          <xsd:element name="Conditions" type="const:typeConditions"/>
        </xsd:choice>
      </xsd:choice>
  </xsd:complexType>
	<xsd:complexType name="typeDesigns">
		<xsd:choice minOccurs="0" maxOccurs="unbounded">
			<xsd:choice minOccurs="0">
				<xsd:element name="Conditions" type="const:typeConditions"/>
			</xsd:choice>
		</xsd:choice>
		<xsd:attribute name="level1" type="xsd:string" use="optional"/>
		<xsd:attribute name="level2" type="xsd:string" use="optional"/>
		<xsd:attribute name="level3" type="xsd:string" use="optional"/>
		<xsd:attribute name="level4" type="xsd:string" use="optional"/>
		<xsd:attribute name="level5" type="xsd:string" use="optional"/>
		<xsd:attribute name="pageSize" type="xsd:integer" use="required" />
		<xsd:attribute name="showDescription" type="xsd:boolean" use="optional" default="false"/>
	</xsd:complexType>
	<xsd:complexType name="typeDimensions">
    <xsd:annotation>
      <xsd:documentation>AÃ±ade al paso en el que se define los controles necesarios para la ediciÃ³n de las dimensiones del modelo.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:choice minOccurs="0">
          <xsd:element name="Conditions" type="const:typeConditions"/>
        </xsd:choice>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="customdimension" type="const:typeCustomDimension" minOccurs="0"/>
        </xsd:choice>
		<xsd:choice minOccurs="0" maxOccurs="1">
		  <xsd:element name="Translations" type="const:typeTranslations"/>
		</xsd:choice>
      </xsd:choice>
    </xsd:choice>
    <xsd:attribute name="hideStandardDimensions" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="hideVariables" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="allowActiveDimensions" type="xsd:boolean" use="optional" />
	<xsd:attribute name="activeDimensionsInmediate" type="xsd:boolean" use="optional" default="true" />
	<xsd:attribute name="applyChangesImmediately" type="xsd:boolean" use="optional" default="false"/>
	<xsd:attribute name="allowHideDimensionsInDrawing" type="xsd:boolean" use="optional" />
	<xsd:attribute name="showWidthAndHeightTextInStandardDimensions" type="xsd:boolean" use="optional" default="false" />
	<xsd:attribute name="name" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="typeCustomDimension">
    <xsd:annotation>
      <xsd:documentation>Incluye la cota personalizada de un tipo especÃ­fico.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="type" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeColor">
    <xsd:annotation>
      <xsd:documentation>Permite editar de manera global el color del modelo.</xsd:documentation>
    </xsd:annotation>
   
      <xsd:all >
        <xsd:element name="Conditions" type="const:typeConditions" minOccurs="0"  maxOccurs="1"/>
        <xsd:element name="ColorFamilies" type="const:typeColorFamilies" minOccurs="0"  maxOccurs="1"/>
        <xsd:element name="Translations" type="const:typeTranslations" minOccurs="0"  maxOccurs="1"/>
      </xsd:all>
   
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="hideLayers" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="partialMode" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="largeView" type="xsd:boolean" use="optional" default="false"/>
  </xsd:complexType>
  <xsd:complexType name="typeColorFamilies">
    <xsd:annotation>
      <xsd:documentation xml:lang="es">Define una serie de familias de colores.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="ColorFamily" type="const:typeColorFamily" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeColorFamily">
    <xsd:annotation>
      <xsd:documentation>Incluye la familia de colores.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeMaterialMount">
	<xsd:annotation>
	  <xsd:documentation>Permite editar de estado de montado/desmontado de un material.</xsd:documentation>
	</xsd:annotation>
	<xsd:attribute name="name" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="typeMirror">
    <xsd:annotation>
      <xsd:documentation>Permite reflejar el modelo de forma vertical y horizontal.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="Conditions" type="const:typeConditions"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="Translations" type="const:typeTranslations"/>
      </xsd:choice>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="typeChangeSystem">
    <xsd:annotation>
      <xsd:documentation>Permite cambiar el sistema del modelo.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0">
      <xsd:element name="Conditions" type="const:typeConditions"/>
    </xsd:choice>
    <xsd:attribute name="inmediate" type="xsd:boolean" use="optional" default="false"/>
  </xsd:complexType>
  <xsd:complexType name="typeGeorgianBar">
    <xsd:annotation>
      <xsd:documentation>Permite seleccionar el barrotillo que se aplicarÃ¡ a todos los vidrios del modelo</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="Conditions" type="const:typeConditions"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="Translations" type="const:typeTranslations"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="georgianBarProfiles" type="const:typeGeorgianBarProfiles"/>
      </xsd:choice>
    </xsd:choice>
    <xsd:attribute name="distanceHorizontal" type="xsd:integer" use="required"/>
    <xsd:attribute name="distanceVertical" type="xsd:integer" use="required"/>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="allowEditGeorgianBarPattern" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="showStickPiecesEditButton" type="xsd:boolean" use="optional" default="true"/>
    <xsd:attribute name="showStickEditButton" type="xsd:boolean" use="optional" default="true"/>
    <xsd:attribute name="materialText" use="optional" default="BaseReference">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina quÃ© texto se visualizarÃ¡ para representar un material.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Description">
            <xsd:annotation>
              <xsd:documentation>El material se visualizarÃ¡ mediante su descripciÃ³n.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="BaseReference">
            <xsd:annotation>
              <xsd:documentation>El material se visualizarÃ¡ mediante su referencia base.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Both">
            <xsd:annotation>
              <xsd:documentation>El material se visualizarÃ¡ mediante su nombre y referencia base.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeGeorgianBarProfiles">
    <xsd:choice minOccurs="1" maxOccurs="7">
      <xsd:element name="internalHorizontal" type="const:typeGeorgianBarProfile" minOccurs="0"/>
      <xsd:element name="internalVertical" type="const:typeGeorgianBarProfile" minOccurs="0"/>
      <xsd:element name="internalCross" type="const:typeGeorgianBarProfile" minOccurs="0"/>
      <xsd:element name="externalInnerHorizontal" type="const:typeGeorgianBarProfile" minOccurs="0"/>
      <xsd:element name="externalInnerVertical" type="const:typeGeorgianBarProfile" minOccurs="0"/>
      <xsd:element name="externalOuterHorizontal" type="const:typeGeorgianBarProfile" minOccurs="0"/>
      <xsd:element name="externalOuterVertical" type="const:typeGeorgianBarProfile" minOccurs="0"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeGeorgianBarProfile">
    <xsd:attribute name="option" type="xsd:string" use="required"/>
  </xsd:complexType>
  <xsd:complexType name="typeAllReinforced">
    <xsd:annotation>
      <xsd:documentation>Atributo Todo Reforzado</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0">
      <xsd:element name="Conditions" type="const:typeConditions"/>
    </xsd:choice>
    <xsd:attribute name="inmediate" type="xsd:boolean" use="optional" default="false"/>
  </xsd:complexType>
  <xsd:complexType name="typeGlasses">
    <xsd:annotation>
      <xsd:documentation>Permite modificar globalmente los vidrios del modelo.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="Conditions" type="const:typeConditions"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="Translations" type="const:typeTranslations"/>
      </xsd:choice>
    </xsd:choice>
    <xsd:attribute name="showGasgket" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="showGlazingBead" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="allowEditGlazingCut" type="xsd:boolean" use="optional" default="false"/>
    <!--This attribute has the same meaning that showGasgket, but has the correct spelling -->
    <xsd:attribute name="showGeorgianBar" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="showGlassComponents" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="glassComponentType" type="const:typeGlassComponentTypes" use="optional" default="Both"/>
    <xsd:attribute name="showMounted" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="hideIncludeGlass" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="subType" type="xsd:integer" use="optional"/>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="glassText" use="optional" default="BaseReference">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina quÃ© texto se visualizarÃ¡ para representar un vidrio.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Description">
            <xsd:annotation>
              <xsd:documentation>El vidrio se visualizarÃ¡ mediante su descripciÃ³n.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="BaseReference">
            <xsd:annotation>
              <xsd:documentation>El vidrio se visualizarÃ¡ mediante su referencia base.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Both">
            <xsd:annotation>
              <xsd:documentation>El vidrio se visualizarÃ¡ mediante su nombre y referencia base.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeGlassConfigurator">
    <xsd:annotation>
      <xsd:documentation>Configurador semiautomatico para seleccionar vidrios mas rapidamente dependiendo de caracteristicas a elegir.</xsd:documentation>
    </xsd:annotation>
    <xsd:all>
        <xsd:element name="Conditions" type="const:typeConditions" minOccurs="0"  maxOccurs="1"/>
        <xsd:element name="Translations" type="const:typeTranslations" minOccurs="0" maxOccurs="1"/>
        <xsd:element name="Systems" type="const:typeSystems" minOccurs="0"  maxOccurs="1"/>
    </xsd:all>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="typeOption">
    <xsd:annotation>
      <xsd:documentation>Permite que se modifique el valor de una opcion determinada.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="1">
      <xsd:element name="Conditions" type="const:typeConditions"/>
    </xsd:choice>
    <xsd:attribute name="name" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="comboBox"/>
          <xsd:enumeration value="radioButtonList"/>
          <xsd:enumeration value="Gallery"/>
          <xsd:enumeration value="checkBox"/>
          <xsd:enumeration value="textBox"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="inmediate" use="optional">
      <xsd:simpleType>
        <xsd:restriction base="xsd:boolean"/>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="onChange" type="const:onChangeType" use="optional">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina que ocurre cuando se cambia el valor de una opcion, se puede establecer automÃ¡ticamente "Apply", se puede simular el disparo de las opciones pero no aplicarlas "Trigger", o se puede no aplicar automÃ¡ticamente "NoApply".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="optionText" use="optional" >
      <xsd:annotation>
        <xsd:documentation>Este atributo determina quÃ© texto se visualizarÃ¡ para representar cada opciÃ³n.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Description">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su descripciÃ³n.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Name">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su nombre.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Both">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su nombre y descripciÃ³n.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="valueText" use="optional" type="const:typeOptionValueDisplayProperties">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina quÃ© texto se visualizarÃ¡ para representar los valores de las opciones.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="alias" use="optional">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina un Ã¡lias para mostrar en lugar del nombre de la opciÃ³n</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string"/>
      </xsd:simpleType>
    </xsd:attribute>
	  <xsd:attribute name="big" use="optional">
		  <xsd:annotation>
			  <xsd:documentation>Este atributo determina si las imagenes del gadget usan el tamaÃ±o grande o el normal(true para usar el grande)</xsd:documentation>
		  </xsd:annotation>
		  <xsd:simpleType>
			  <xsd:restriction base="xsd:boolean"/>
		  </xsd:simpleType>
	  </xsd:attribute>
    <xsd:attribute name="selectedOptionImage" use="optional">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina si muestra la imagen en la opcion seleccionada del gadget</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:boolean"/>
      </xsd:simpleType>
    </xsd:attribute>
	<xsd:attribute name="pageSize" type="xsd:int" use="optional">
		<xsd:annotation>
			<xsd:documentation>Determina el número de items a mostrar en la galería.</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
    <xsd:attribute name="firstValueInGallery" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation>Determina el valor de la opción que siempre se mostrará el primero de la galería.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="hideText" type="xsd:boolean" use="optional" default="false">
		  <xsd:annotation>
			  <xsd:documentation>Este atributo determina si se oculta el texto, por si se quiere mostrar solamente la imagen</xsd:documentation>
		  </xsd:annotation>
	  </xsd:attribute>
	  <xsd:attribute name="searchEnabled" use="optional" default="false" type="xsd:boolean">
	    <xsd:annotation>
		    <xsd:documentation>Este atributo determina si se mostrara el filtro de búsqueda si el tipo de la opción es Gallery</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
	  <xsd:attribute name="numberDecimalDigits" use="optional" default="2">
		  <xsd:annotation>
			  <xsd:documentation>Determina el número de decimales a mostrar en la opción numérica.</xsd:documentation>
		  </xsd:annotation>
		  <xsd:simpleType>
			  <xsd:restriction base="xsd:int">
				  <xsd:minExclusive value="0" />
			  </xsd:restriction>
		  </xsd:simpleType>
	  </xsd:attribute>

  </xsd:complexType>
  <xsd:complexType name="typeOptions">
    <xsd:annotation>
      <xsd:documentation>Permite modificar las opciones asociadas al modelo. Dentro de este nodo se incluirÃ¡n aquellas opciones que se quieran editar.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="option" type="const:typeOption" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="inmediate" use="optional" default="1">
      <xsd:annotation>
        <xsd:documentation>Este atributo cÃ³mo se aplica la opciÃ³n. Si su valor es verdadero, la opciÃ³n se aplicarÃ¡ inmediatamente despuÃ©s de que el usuario haya modificado su valor, tal como se hace en PrefCAD. Si es falso, el cambio no tendrÃ¡ efecto hasta que se apliquen todos los cambios del paso.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:boolean"/>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="onChange" type="const:onChangeType" use="optional">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina que ocurre cuando se cambia el valor de una opcion, se puede establecer automÃ¡ticamente "Apply", se puede simular el disparo de las opciones pero no aplicarlas "Trigger", o se puede no aplicar automÃ¡ticamente "NoApply".</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="show" use="optional">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina quÃ© texto se visualizarÃ¡ para representar la opciÃ³n y sus valores. Lo seguimos manteniendo por compatiblidad, pero en su lugar habrÃ­an de usarse optionText y valueText.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Text">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su descripciÃ³n y los valores mediante su texto.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Value">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su nombre y los valores mediante el valor tal cual estÃ¡ definido.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Both">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su nombre y descripciÃ³n, y los valores mediante el valor y su texto.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="optionText" use="optional">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina quÃ© texto se visualizarÃ¡ para representar cada opciÃ³n.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Description">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su descripciÃ³n.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Name">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su nombre.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Both">
            <xsd:annotation>
              <xsd:documentation>La opciÃ³n se visualizarÃ¡ mediante su nombre y descripciÃ³n.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="valueText" use="optional">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina quÃ© texto se visualizarÃ¡ para representar los valores de las opciones.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Text">
            <xsd:annotation>
              <xsd:documentation>El valor se visualizarÃ¡ mediante su texto.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Value">
            <xsd:annotation>
              <xsd:documentation>El propio valor se usarÃ¡ para visualizarse.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Both">
            <xsd:annotation>
              <xsd:documentation>Se visualizarÃ¡ el propio valor y su texto.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="gridMode" use="optional" default="false">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina si las opciones se mostraran en una grid o no</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:boolean"/>
      </xsd:simpleType>
    </xsd:attribute>
	  <xsd:attribute name="searchEnabled" use="optional" default="false" type="xsd:boolean">
		  <xsd:annotation>
			  <xsd:documentation>Este atributo determina si se mostrara el filtro de búsqueda si el tipo de la opción es Gallery</xsd:documentation>
		  </xsd:annotation>
	  </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeChoices">
    <xsd:annotation>
      <xsd:documentation>Permite modificar determinados elementos del modelo.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice maxOccurs="unbounded">
      <xsd:choice  maxOccurs="unbounded">
        <xsd:element name="Filters" type="const:typeFilters" />
      </xsd:choice>
      <xsd:choice  maxOccurs="unbounded">
        <xsd:element name="choice" type="const:typeChoice"/>
      </xsd:choice>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeChoice">
    <xsd:annotation>
      <xsd:documentation>Permite modificar un determinado elemento del modelo.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="1">
      <xsd:element name="Translations" type="const:typeTranslations"/>
    </xsd:choice>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="option"/>
          <xsd:enumeration value="modelColor"/>
          <xsd:enumeration value="slabColor"/>
          <xsd:enumeration value="slabPriceFact"/>
          <xsd:enumeration value="part"/>          
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="choice" use="optional"/>
    <xsd:attribute name="name" use="optional"/>
    <xsd:attribute name="optionName" use="optional"/>
    <xsd:attribute name="element" use="optional"/>
    <xsd:attribute name="material" use="optional"/>
    <xsd:attribute name="partType" use="optional"/>
    <xsd:attribute name="rolElement" use="optional"/>
    <xsd:attribute name="activeChoice" use="optional"/>
    <xsd:attribute name="allowNone" use="optional"/>
    <xsd:attribute name="side" use="optional">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="inner"/>
          <xsd:enumeration value="outer"/>
          <xsd:enumeration value="fill"/>
          <xsd:enumeration value="both"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="partialMode" type="xsd:boolean" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="typeField">
    <xsd:annotation>
      <xsd:documentation>Permite editar los valores propiedades o campos del documento, tales como su nomenclatura o cantidad de instancias.</xsd:documentation>
    </xsd:annotation>
	  <xsd:choice maxOccurs="unbounded">
		  <xsd:element name="Conditions" type="const:typeConditions" minOccurs="0"/>
		  <xsd:element name="Translations" type="const:typeTranslations" minOccurs="0" maxOccurs="1"/>
	  </xsd:choice>
    <xsd:attribute name="id" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Nomenclature"/>
          <xsd:enumeration value="Quantity"/>
          <xsd:enumeration value="Code"/>
          <xsd:enumeration value="Description"/>
          <xsd:enumeration value="InternalText"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="text" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="textBox"/>
          <xsd:enumeration value="label"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="rows" use="optional" type="xsd:integer" default="1"/>          
  </xsd:complexType>
  <xsd:complexType name="typeFastOffering">
    <xsd:annotation>
      <xsd:documentation>Permite editar un modelo usando Fast Offering</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0">
      <xsd:element name="Conditions" type="const:typeConditions"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="typeOpenings">
    <xsd:annotation>
      <xsd:documentation>Permite configurar los tipos de aperturas en cada hoja del modelo.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="Conditions" type="const:typeConditions"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="Translations" type="const:typeTranslations"/>
      </xsd:choice>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="hideHandleHeight" type="xsd:boolean" use ="optional" default="false"/>
		<xsd:attribute name="hideDrawing" type="xsd:boolean" use ="optional" default="false"/>
		<xsd:attribute name="hideActiveCheck" type="xsd:boolean" use ="optional" default="false"/>
		<xsd:attribute name="hideFixedSashCheck" type="xsd:boolean" use ="optional" default="false"/>
		<xsd:attribute name="hideDoorCheck" type="xsd:boolean" use ="optional" default="false"/>
    <xsd:attribute name="inmediate" type="xsd:boolean" use="optional" default="true"/>
  </xsd:complexType>
  <xsd:complexType name="typeTemplateCategory">
    <xsd:annotation>
      <xsd:documentation>Permite filtrar aqyellas categorÃ­as que son vÃ¡lidas para utilizar en el paso Fast Offering</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeRollerShutter">
    <xsd:annotation>
      <xsd:documentation>Permite asociar los controles de persiana a un modelo</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence maxOccurs="unbounded">
      <xsd:choice minOccurs="0">
        <xsd:element name="Conditions" type="const:typeConditions"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="Translations" type="const:typeTranslations"/>
      </xsd:choice>
      <xsd:element name="rollerActive" type="const:typeRollerActive" minOccurs="0"/>
      <xsd:element name="rollerBoxPiece" type="const:typeRollerBoxPiece" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="hideDivideRollerBox" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:complexType name="typeRollerActive">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo el checkbox de persiana Activa</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="inmediate" use="optional">
      <xsd:simpleType>
        <xsd:restriction base="xsd:boolean"/>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBoxPiece">
    <xsd:annotation>
      <xsd:documentation>Permite asociar el cajon de persiana al modelo</xsd:documentation>
    </xsd:annotation>
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="rollerBoxActive" type="const:typeRollerBoxActive" minOccurs="0"/>
      <xsd:element name="rollerBoxType" type="const:typeRollerBoxType" minOccurs="0"/>
      <xsd:element name="rollerBoxColor" type="const:typeRollerBoxColor" minOccurs="0"/>
      <xsd:element name="rollerBoxHeight" type="const:typeRollerBoxHeight" minOccurs="0"/>
      <xsd:element name="rollerBoxOffsets" type="const:typeRollerBoxOffsets" minOccurs="0"/>
      <xsd:element name="rollerBoxMounted" type="const:typeRollerBoxMounted" minOccurs="0"/>
      <xsd:element name="rollerPanel" type="const:typeRollerPanel" minOccurs="0"/>
      <xsd:element name="rollerAxis" type="const:typeRollerAxis"/>
    </xsd:choice>
	  <xsd:attribute name="inmediate" use="optional">
		  <xsd:simpleType>
			  <xsd:restriction base="xsd:boolean"/>
		  </xsd:simpleType>
	  </xsd:attribute>
  </xsd:complexType>
	
  <xsd:complexType name="typeRollerBoxActive">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana un checkbox para activar el cajon</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBoxType">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana el tipo de Cajon</xsd:documentation>
    </xsd:annotation>
	  <xsd:attribute name="hideSelector" use="optional">
		  <xsd:simpleType>
			  <xsd:restriction base="xsd:boolean"/>
		  </xsd:simpleType>
	  </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBoxColor">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana el color del cajon</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBoxHeight">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana la altura del cajon</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBoxOffsets">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana los desplazamientos</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBoxMounted">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana el checkbox montado</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerAxis">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana los ejes</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence maxOccurs="unbounded">
      <xsd:element name="rollerSystem" type="const:typeRollerSystem"/>
      <xsd:element name="rollerBlades" type="const:typeRollerBlades"/>
      <xsd:element name="rollerAxisMounted" type="const:typeRollerAxisMounted" minOccurs="0"/>
      <xsd:element name="rollerAxisCourtain" type="const:typeRollerAxisCourtain" minOccurs="0"/>
    </xsd:sequence>
	<xsd:attribute name="inmediate" type="xsd:boolean" use="optional" default="false"/>  
  </xsd:complexType>
  <xsd:complexType name="typeRollerSystem">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana el accionamiento</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="rollerSystemActive" type="const:typeRollerSystemActive" minOccurs="0"/>
      <xsd:element name="rollerSystemType" type="const:typeRollerSystemType" minOccurs="0"/>
      <xsd:element name="rollerSystemColor" type="const:typeRollerSystemColor" minOccurs="0"/>
      <xsd:element name="rollerSystemHeight" type="const:typeRollerSystemHeight" minOccurs="0"/>
      <xsd:element name="rollerSystemOffset" type="const:typeRollerSystemOffset" minOccurs="0"/>
      <xsd:element name="rollerSystemSide" type="const:typeRollerSystemSide" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="typeRollerPanel">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana el panel</xsd:documentation>
    </xsd:annotation>
    <!--<xsd:sequence minOccurs="0" maxOccurs="unbounded">
			<xsd:element name="rollerPanelActive" type="const:typeRollerPanelActive" minOccurs="0"/>
			<xsd:element name="rollerPanelType" type="const:typeRollerPanelType" minOccurs="0"/>
			<xsd:element name="rollerPanelWidth" type="const:typeRollerPanelWidth" minOccurs="0"/>
			<xsd:element name="rollerPanelColor" type="const:typeRollerPanelColor" minOccurs="0"/>
			<xsd:element name="rollerPanelMounted" type="const:typeRollerPanelMounted" minOccurs="0"/>
		</xsd:sequence>-->
    <xsd:attribute name="showGuides" type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="guideValueText" type="const:typeOptionValueDisplayProperties" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="typeRollerBlades">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana las lamas</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="rollerBladesActive" type="const:typeRollerBladesActive" minOccurs="0"/>
      <xsd:element name="rollerBladesType" type="const:typeRollerBladesType" minOccurs="0"/>
      <xsd:element name="rollerBladesColor" type="const:typeRollerBladesColor" minOccurs="0"/>
      <xsd:element name="rollerBladesWidth" type="const:typeRollerBladesWidth" minOccurs="0"/>
    </xsd:sequence>
	<xsd:attribute name="inmediate" type="xsd:boolean" use="optional" default="false"/>
  </xsd:complexType>
  <xsd:complexType name="typeRollerSystemActive">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana un checkbox que active el accionamiento</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerSystemType">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana el tipo de accionamiento</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="valueText" type="const:typeOptionValueDisplayProperties" use="optional" />
  </xsd:complexType>
  <xsd:complexType name="typeRollerSystemColor">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana un combo con los colores del accionamiento</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerSystemHeight">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana un textbox con la altura del cajon</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerSystemOffset">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana el desplazamiento del accionamiento</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerSystemSide">
    <xsd:annotation>
      <xsd:documentation>Permite asociar a un modelo con persiana un Button List para el lado en el que se situara el accionamiento</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerPanelActive">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana un checkbox que active o no la edicion del panel</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerPanelType">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana un combo que muestre los tipos de panel</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerPanelWidth">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana un texbox para indicar la anchura del panel</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerPanelColor">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana un combobox en el que se indican los colores que se pueden aplicar al panel</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerPanelMounted">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana un checbox de montado</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBladesActive">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana un checbox de lamas activas</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBladesType">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana una combo con el tipo de lamas existentes</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBladesColor">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana una combo con los colores disponibles para las lamas</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerBladesWidth">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana una combo con los colores disponibles para las lamas</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerAxisMounted">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana un checkbox para montar el eje</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeRollerAxisCourtain">
    <xsd:annotation>
      <xsd:documentation>Permite asociar al modelo con persiana un checkbox para montar cortina</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  <xsd:complexType name="typeEditionItemSlabs">
    <xsd:annotation>
      <xsd:documentation>AÃ±ade al paso en el que se define los controles necesarios para la ediciÃ³n de slabs del modelo.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="showInsert" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="showSize" type="xsd:boolean" use="optional"/>
    <xsd:attribute name="pageSize" type="xsd:int" use="optional">
      <xsd:annotation>
        <xsd:documentation>Determines the items to show in gallery controls</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="typeGeorgianBarStick">
    <xsd:annotation>
      <xsd:documentation>Permite cambiar la posiciÃ³n de los palillos de barrotillo, el material y color</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="Conditions" type="const:typeConditions"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="1">
        <xsd:element name="Translations" type="const:typeTranslations"/>
      </xsd:choice>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="showProperties" type="xsd:boolean" use="optional" default="true">
      <xsd:annotation>
        <xsd:documentation>Determines if the stick properties must be shown</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="materialText" use="optional" default="BaseReference">
      <xsd:annotation>
        <xsd:documentation>Este atributo determina quÃ© texto se visualizarÃ¡ para representar un material.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Description">
            <xsd:annotation>
              <xsd:documentation>El material se visualizarÃ¡ mediante su descripciÃ³n.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="BaseReference">
            <xsd:annotation>
              <xsd:documentation>El material se visualizarÃ¡ mediante su referencia base.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Both">
            <xsd:annotation>
              <xsd:documentation>El material se visualizarÃ¡ mediante su nombre y referencia base.</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="applyExternalSticksInSamePosition" type="xsd:boolean" use="optional"/>
  </xsd:complexType>
  <xsd:simpleType name="onChangeType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="apply"/>
      <xsd:enumeration value="trigger"/>
      <xsd:enumeration value="noApply"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>